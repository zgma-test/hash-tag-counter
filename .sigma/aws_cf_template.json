{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the stack for project hash-tag-counter. Generated by Sigma",
  "Parameters": {
    "lambdaCodeBucketParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket containing the Lambda deployment package"
    },
    "lambdaCodeKeyParameter": {
      "Type": "String",
      "Description": "S3 key of the Lambda deployment package"
    }
  },
  "Outputs": {
    "hashTagCounterlambda": {
      "Description": "ARN of Lambda function hashTagCounterlambda",
      "Value": {
        "Fn::GetAtt": [
          "hashTagCounterlambda",
          "Arn"
        ]
      }
    },
    "apigpopulateHashTagDataProxypopulatePOST": {
      "Description": "URL of populate-hash-tag-data-proxy/populate:POST endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apigpopulateHashTagDataProxy"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com/",
            "Prod",
            "/populate"
          ]
        ]
      }
    },
    "hashTagCounterpushTestData": {
      "Description": "ARN of Lambda function hashTagCounterpushTestData",
      "Value": {
        "Fn::GetAtt": [
          "hashTagCounterpushTestData",
          "Arn"
        ]
      }
    }
  },
  "Resources": {
    "ddbHashTags": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "HashTags",
        "AttributeDefinitions": [
          {
            "AttributeName": "Application",
            "AttributeType": "S"
          },
          {
            "AttributeName": "HashTag",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "Application",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "HashTag",
            "KeyType": "RANGE"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    },
    "kinesishashTagStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "hash-tag-stream",
        "ShardCount": 1
      }
    },
    "apigpopulateHashTagDataProxy": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "An API generated by Sigma",
        "Name": "populate-hash-tag-data-proxy",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        }
      }
    },
    "apigpopulateHashTagDataProxypopulate": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "apigpopulateHashTagDataProxy"
        },
        "ParentId": {
          "Fn::GetAtt": [
            "apigpopulateHashTagDataProxy",
            "RootResourceId"
          ]
        },
        "PathPart": "populate"
      }
    },
    "apigpopulateHashTagDataProxypopulatePOST": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "apigpopulateHashTagDataProxy"
        },
        "ResourceId": {
          "Ref": "apigpopulateHashTagDataProxypopulate"
        },
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ],
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${hashTagCounterpushTestData.Arn}/invocations"
          },
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        }
      }
    },
    "apigpopulateHashTagDataProxypopulateCors": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "apigpopulateHashTagDataProxy"
        },
        "ResourceId": {
          "Ref": "apigpopulateHashTagDataProxypopulate"
        },
        "HttpMethod": "OPTIONS",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            }
          }
        ]
      }
    },
    "hashTagCounterlambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "hashTagCounterlambda",
        "Description": "Invokes functions defined in hash-tag-counter/lambda.js in project hash-tag-counter. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "hash-tag-counter/lambda.handler",
        "Timeout": 60,
        "Runtime": "nodejs10.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "hashTagCounterlambdaExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            }
          }
        }
      }
    },
    "hashTagCounterlambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "hashTagCounterlambdaPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "ddbHashTags",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "ddbHashTags",
                      "Arn"
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:GetRecords",
                    "kinesis:GetShardIterator",
                    "kinesis:DescribeStream",
                    "kinesis:ListStreams"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "kinesishashTagStream",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "kinesishashTagStreamTriggerhashTagCounterlambda0": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 100,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "kinesishashTagStream",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON",
        "FunctionName": {
          "Ref": "hashTagCounterlambda"
        }
      }
    },
    "kinesishashTagStreamPermissionhashTagCounterlambda": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "hashTagCounterlambda"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "kinesishashTagStream",
            "Arn"
          ]
        },
        "Principal": "kinesis.amazonaws.com"
      }
    },
    "hashTagCounterpushTestData": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "hashTagCounterpushTestData",
        "Description": "Invokes functions defined in hash-tag-counter/push-test-data.js in project hash-tag-counter. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "hash-tag-counter/push-test-data.handler",
        "Timeout": 60,
        "Runtime": "nodejs10.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "hashTagCounterpushTestDataExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            }
          }
        }
      }
    },
    "hashTagCounterpushTestDataExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "hashTagCounterpushTestDataPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "kinesis:PutRecord"
                  ],
                  "Resource": {
                    "Fn::GetAtt": [
                      "kinesishashTagStream",
                      "Arn"
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "apigpopulateHashTagDataProxypopulatePOSTPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "hashTagCounterpushTestData"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
            {
              "__Method__": "POST",
              "__Path__": "/populate",
              "__ApiId__": {
                "Ref": "apigpopulateHashTagDataProxy"
              }
            }
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "apigpopulateHashTagDataProxyDeployment1602053689984": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apigpopulateHashTagDataProxy"
        },
        "Description": "An API deployment generated by Sigma for API populate-hash-tag-data-proxy",
        "StageName": "Prod"
      },
      "DependsOn": [
        "apigpopulateHashTagDataProxypopulatePOST",
        "apigpopulateHashTagDataProxypopulateCors"
      ]
    }
  }
}